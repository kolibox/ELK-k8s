sudo: required
services:
   - docker



env:
  global:
    # Do not prompt for user input when using any SDK methods.
      - CLOUDSDK_CORE_DISABLE_PROMPTS=1
      
#Installing Google SDK:
before_install:
   - if [ ! -d $HOME/google-cloud-sdk/bin ]; then
# The install script errors if this directory already exists,
# but Travis already creates it when we mark it as cached.
     rm -rf $HOME/google-cloud-sdk;
# The install script is overly verbose, which sometimes causes
# problems on Travis, so ignore stdout.
     curl https://sdk.cloud.google.com | bash > /dev/null;
     fi
# This line is critical. We setup the SDK to take precedence in our
# environment over the old SDK that is already on the machine.
   - source $HOME/google-cloud-sdk/path.bash.inc
   - gcloud components update kubectl
   - gcloud version







#    - curl https://sdk.cloud.google.com | bash > /dev/null;
#    - source $HOME/google-cloud-sdk/path.bash.inc
#    - gcloud version || true
#    - if [ ! -d "$HOME/google-cloud-sdk/bin" ]; then rm -rf $HOME/google-cloud-sdk; export CLOUDSDK_CORE_DISABLE_PROMPTS=1; curl https://sdk.cloud.google.com | bash; fi
#    - gcloud components list
#    - gcloud components install kubectl
#    - gcloud components list
#    - gcloud components update kubectl
#    - gcloud auth activate-service-account --key-file service-account.json
#    - gcloud version




#   - curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-234.0.0-linux-x86_64.tar.gz
#   - tar zxvf google-cloud-sdk-234.0.0-linux-x86_64.tar.gz google-cloud-sdk
#   - ./google-cloud-sdk/install.sh --disable-prompts
#   - gcloud components list
   